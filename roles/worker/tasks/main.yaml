---

- name: 创建k8s组件服务目录
  file:
    path: "{{item}}"
    state: directory
    recurse: yes
  with_items:
    - "{{k8s_path}}/bin"
    - "{{k8s_path}}/cert"
    - "{{k8s_path}}/config"

- name: 上传ca证书
  copy:
    src: "{{item}}"
    dest: "{{k8s_path}}/cert"
  with_items:
    - ca.pem
    - kube-proxy.pem
    - kube-proxy-key.pem

- name: 上传kubelet服务组件配置
  template:
    src: kubelet.service.j2
    dest: /lib/systemd/system/kubelet.service

- name: 上传kube-proxy服务组件配置
  template:
    src: kube-proxy.service.j2
    dest: /lib/systemd/system/kube-proxy.service

- name: 上传k8s服务程序组件
  copy:
    src: "{{item}}"
    dest: "{{k8s_path}}/bin"
    mode: '0755'
  with_items:
    - kubelet
    - kube-proxy
    - kubectl

- name: 上传kubelet.yaml文件
  template:
    src: kubelet.yaml.j2
    dest: "{{k8s_path}}/config/kubelet.yaml"

- name: 上传kube-proxy.yaml文件
  template:
    src: kube-proxy.yaml.j2
    dest: "{{k8s_path}}/config/kube-proxy.yaml"

- name: 上传kubelet配置
  template:
    src: kubelet.conf.j2
    dest: "{{k8s_path}}/config/kubelet.conf"

- name: 上传kube-proxy配置
  template:
    src: kube-proxy.conf.j2
    dest: "{{k8s_path}}/config/kube-proxy.conf"

- name: 生成kubelet.kubeconfig配置文件
  shell: |
    {{k8s_path}}/bin/kubectl config set-cluster kubernetes \
      --certificate-authority={{k8s_path}}/cert/ca.pem \
      --embed-certs=true \
      --server=https://{{master_node}}:6443 \
      --kubeconfig={{k8s_path}}/config/kubelet.kubeconfig
    {{k8s_path}}/bin/kubectl config set-credentials kubelet-bootstrap \
      --token={{cluster_token}}} \
      --kubeconfig={{k8s_path}}/config/kubelet.kubeconfig
    {{k8s_path}}/bin/kubectl config set-context default \
      --cluster=kubernetes \
      --user=kubelet-bootstrap \
      --kubeconfig={{k8s_path}}/config/kubelet.kubeconfig
    {{k8s_path}}/bin/kubectl config use-context default \
      --kubeconfig={{k8s_path}}/config/kubelet.kubeconfig

- name: 生成kubelet-bootstrap.kubeconfig配置文件
  shell: |
    {{k8s_path}}/bin/kubectl config set-cluster kubernetes \
      --certificate-authority={{k8s_path}}/cert/ca.pem \
      --embed-certs=true \
      --server=https://{{master_node}}:6443 \ 
      --kubeconfig={{k8s_path}}/config/kubelet-bootstrap.kubeconfig 
    {{k8s_path}}/bin/kubectl config set-credentials kubelet-bootstrap \
      --token={{cluster_token}} \
      --kubeconfig={{k8s_path}}/config/kubelet-bootstrap.kubeconfig
    {{k8s_path}}/bin/kubectl config set-context default \
      --cluster=kubernetes \
      --user=kubelet-bootstrap \
      --kubeconfig={{k8s_path}}/config/kubelet-bootstrap.kubeconfig
    {{k8s_path}}/bin/kubectl config use-context default \
      --kubeconfig={{k8s_path}}/config/kubelet-bootstrap.kubeconfig

- name: 生成kube-proxy.kubeconfig配置文件
  shell: |
    {{k8s_path}}/bin/kubectl config set-cluster kubernetes \
      --certificate-authority={{k8s_path}}/cert/ca.pem \
      --embed-certs=true --server=https://{{master_node}}:6443 \
      --kubeconfig={{k8s_path}}/config/kube-proxy.kubeconfig
    {{k8s_path}}/bin/kubectl config set-credentials kube-proxy \
      --client-certificate={{k8s_path}}/cert/kube-proxy.pem \
      --client-key={{k8s_path}}/cert/kube-proxy-key.pem \
      --embed-certs=true \
      --kubeconfig={{k8s_path}}/config/kube-proxy.kubeconfig
    {{k8s_path}}/bin/kubectl config set-context default \
      --cluster=kubernetes \
      --user=kube-proxy \
      --kubeconfig={{k8s_path}}/config/kube-proxy.kubeconfig
    {{k8s_path}}/bin/kubectl config use-context default \
      --kubeconfig={{k8s_path}}/config/kube-proxy.kubeconfig

- name: 启动kubelet服务组件
  systemd:
    name: kubelet
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: 启动kube-proxy服务组件
  systemd:
    name: kube-proxy
    state: restarted
    enabled: yes
    daemon_reload: yes